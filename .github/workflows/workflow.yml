name: Docker PHP Images GitHub workflow

on:
  pull_request:
    branches:
      - 'v4'
  push:
    branches:
      - 'v4'
  schedule:
    - cron: '42 3 * * 0'

jobs:
  build_test_maybe_release:
    strategy:
      matrix:
        php_version: ['7.4', '8.0', '8.1']
        platform: ['linux/amd64', 'linux/arm64']
        variant: ['apache', 'cli', 'fpm']
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and test
        run: |
          PHP_VERSION="${{ matrix.php_version }}" BRANCH="v4" VARIANT="${{ matrix.variant }}" OWNER="${{ secrets.DOCKERHUB_USERNAME }}" PLATFORM="${{ matrix.platform }}" ./build-and-test.sh
          docker images | grep ${OWNER}/php
      - name: Login to DockerHub
        # Merge ~ push.
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Release
        # Merge ~ push.
        if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
        run: |
          PHP_VERSION="${{ matrix.php_version }}" BRANCH="v4" VARIANT="${{ matrix.variant }}" OWNER="${{ secrets.DOCKERHUB_USERNAME }}" PLATFORM="${{ matrix.platform }}" ./push.sh

  combine_archs:
    # Merge ~ push.
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
    needs: [ build_test_maybe_release ]
    strategy:
      matrix:
        php_version: ['7.4', '8.0', '8.1']
        variant: ['apache', 'cli', 'fpm']
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create combined Manifest
        run: PHP_VERSION="${{ matrix.php_version }}" BRANCH="v4" VARIANT="${{ matrix.variant }}" OWNER="${{ secrets.DOCKERHUB_USERNAME }}" ./combine_archs.sh
